---
// const props = Astro.props;
const {
  class: className,
  "hue-animation-duration": hueAnimationDuration = 0,
  "data-confetti-button": x,
  "hue-color": hueColor = 0,
  ...restOfProps
} = Astro.props;

console.log(Astro.props);
---

<button
  {...restOfProps}
  data-confetti-button={x}
  class={className + " " + (hueAnimationDuration ? "animate" : "")}
  style={`
  --initial-hue-color: ${hueColor}deg;
  --hue-animation-duration: ${hueAnimationDuration}s;
  `}
>
  <span class="shadow"></span>
  <span class="edge"></span>
  <span class="front text"> <slot /> </span>
</button>

<script>
  // setInterval(() => {
  //   const value = document
  //     .getElementsByTagName("button")[0]
  //     .style.getPropertyValue("--hue-color");

  //   let hue = parseInt(value) + 1;
  //   if (hue > 360) hue = 0;

  //   document
  //     .getElementsByTagName("button")[0]
  //     .style.setProperty("--hue-color", `${hue}deg`);
  // }, 10);
</script>

<style>
  @property --hue-color {
    syntax: "<angle>";
    inherits: true;
    initial-value: 0deg;
  }

  button {
    --initial-hue-color: 125deg;
    --hue-color: var(--initial-hue-color);
    --hue-animation-duration: 0s;
    animation: hueShift var(--hue-animation-duration) linear infinite;
    animation-play-state: paused;
  }

  button.animate {
    animation-play-state: running;
  }

  @keyframes hueShift {
    from {
      --hue-color: var(--initial-hue-color);
    }
    to {
      --hue-color: calc(360deg + var(--initial-hue-color));
    }
  }

  /* From Uiverse.io by cssbuttons-io */
  /* From Uiverse.io by zjssun */
  /* And me */

  button {
    position: relative;
    border: none;
    background: transparent;
    padding: 0;
    cursor: pointer;
    outline-offset: 4px;
    transition: all 250ms ease;
    user-select: none;
    touch-action: manipulation;
  }

  .shadow {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border-radius: 12px;
    background: hsl(0deg 0% 0% / 0.25);
    will-change: transform;
    transform: translateY(2px);
    transition: transform 600ms cubic-bezier(0.3, 0.7, 0.4, 1);
  }

  .edge {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border-radius: 12px;
    background: linear-gradient(
      to left,
      hsl(var(--hue-color) 100% 16%) 0%,
      hsl(var(--hue-color) 100% 32%) 8%,
      hsl(var(--hue-color) 100% 32%) 92%,
      hsl(var(--hue-color) 100% 16%) 100%
    );
    /* background: hsl(var(--hue-color) 100% 32%); */
  }

  .front {
    display: block;
    position: relative;
    padding: 12px 27px;
    border-radius: 12px;
    font-size: 1.1rem;
    color: white;
    background: hsl(var(--hue-color) 100% 47%);
    will-change: transform;
    transform: translateY(-4px);
    transition: transform 600ms cubic-bezier(0.3, 0.7, 0.4, 1);
  }

  button:hover {
    filter: brightness(110%);
  }

  button:hover .front {
    transform: translateY(-6px);
    transition: transform 250ms cubic-bezier(0.3, 0.7, 0.4, 1.5);
  }

  button:active .front {
    transform: translateY(-2px);
    transition: transform 34ms;
  }

  button:hover .shadow {
    transform: translateY(4px);
    transition: transform 250ms cubic-bezier(0.3, 0.7, 0.4, 1.5);
  }

  button:active .shadow {
    transform: translateY(1px);
    transition: transform 34ms;
  }

  button:focus:not(:focus-visible) {
    outline: none;
  }

  button:active {
    transform: scale(0.96);
  }

  button:before,
  button:after {
    position: absolute;
    content: "";
    width: 150%;
    left: 50%;
    height: 100%;
    transform: translateX(-50%);
    z-index: -1000;
    background-repeat: no-repeat;
  }

  button:hover:before {
    top: -70%;
    background-image: radial-gradient(
        circle,
        hsl(var(--hue-color) 100% 47%) 20%,
        transparent 20%
      ),
      radial-gradient(
        circle,
        transparent 20%,
        hsl(var(--hue-color) 100% 47%) 20%,
        transparent 30%
      ),
      radial-gradient(
        circle,
        hsl(var(--hue-color) 100% 47%) 20%,
        transparent 20%
      ),
      radial-gradient(
        circle,
        hsl(var(--hue-color) 100% 47%) 20%,
        transparent 20%
      ),
      radial-gradient(
        circle,
        transparent 10%,
        hsl(var(--hue-color) 100% 47%) 15%,
        transparent 20%
      ),
      radial-gradient(
        circle,
        hsl(var(--hue-color) 100% 47%) 20%,
        transparent 20%
      ),
      radial-gradient(
        circle,
        hsl(var(--hue-color) 100% 47%) 20%,
        transparent 20%
      ),
      radial-gradient(
        circle,
        hsl(var(--hue-color) 100% 47%) 20%,
        transparent 20%
      ),
      radial-gradient(
        circle,
        hsl(var(--hue-color) 100% 47%) 20%,
        transparent 20%
      );
    background-size:
      10% 10%,
      20% 20%,
      15% 15%,
      20% 20%,
      18% 18%,
      10% 10%,
      15% 15%,
      10% 10%,
      18% 18%;
    background-position: 50% 120%;
    animation: topBubbles 0.6s ease;
  }

  @keyframes topBubbles {
    0% {
      background-position:
        5% 90%,
        10% 90%,
        10% 90%,
        15% 90%,
        25% 90%,
        25% 90%,
        40% 90%,
        55% 90%,
        70% 90%;
    }

    50% {
      background-position:
        0% 80%,
        0% 20%,
        10% 40%,
        20% 0%,
        30% 30%,
        22% 50%,
        50% 50%,
        65% 20%,
        90% 30%;
    }

    100% {
      background-position:
        0% 70%,
        0% 10%,
        10% 30%,
        20% -10%,
        30% 20%,
        22% 40%,
        50% 40%,
        65% 10%,
        90% 20%;
      background-size:
        0% 0%,
        0% 0%,
        0% 0%,
        0% 0%,
        0% 0%,
        0% 0%;
    }
  }

  button:hover::after {
    bottom: -70%;
    background-image: radial-gradient(
        circle,
        hsl(var(--hue-color) 100% 47%) 20%,
        transparent 20%
      ),
      radial-gradient(
        circle,
        hsl(var(--hue-color) 100% 47%) 20%,
        transparent 20%
      ),
      radial-gradient(
        circle,
        transparent 10%,
        hsl(var(--hue-color) 100% 47%) 15%,
        transparent 20%
      ),
      radial-gradient(
        circle,
        hsl(var(--hue-color) 100% 47%) 20%,
        transparent 20%
      ),
      radial-gradient(
        circle,
        hsl(var(--hue-color) 100% 47%) 20%,
        transparent 20%
      ),
      radial-gradient(
        circle,
        hsl(var(--hue-color) 100% 47%) 20%,
        transparent 20%
      ),
      radial-gradient(
        circle,
        hsl(var(--hue-color) 100% 47%) 20%,
        transparent 20%
      );
    background-size:
      15% 15%,
      20% 20%,
      18% 18%,
      20% 20%,
      15% 15%,
      20% 20%,
      18% 18%;
    background-position: 50% 0%;
    animation: bottomBubbles 0.6s ease;
  }

  @keyframes bottomBubbles {
    0% {
      background-position:
        10% -10%,
        30% 10%,
        55% -10%,
        70% -10%,
        85% -10%,
        70% -10%,
        70% 0%;
    }

    50% {
      background-position:
        0% 80%,
        20% 80%,
        45% 60%,
        60% 100%,
        75% 70%,
        95% 60%,
        105% 0%;
    }

    100% {
      background-position:
        0% 90%,
        20% 90%,
        45% 70%,
        60% 110%,
        75% 80%,
        95% 70%,
        110% 10%;
      background-size:
        0% 0%,
        0% 0%,
        0% 0%,
        0% 0%,
        0% 0%,
        0% 0%;
    }
  }
</style>
